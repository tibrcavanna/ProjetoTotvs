#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\Dialog.ch"
#line 28 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\Font.ch"
#line 29 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\PTMenu.ch"
#line 31 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\Print.ch"
#line 33 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\Colors.ch"
#line 35 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\Folder.ch"
#line 37 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\msobject.ch"
#line 38 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\VKey.ch"
#line 42 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\WinApi.ch"
#line 44 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\FWCommand.ch"
#line 47 "PROTHEUS.CH"
#line 1 "E:\TOTVS1~3\MICROS~1\PROTHEUS\INCLUDE\FWCSS.CH"
#line 50 "PROTHEUS.CH"
#line 3 "e:\TOTVS1~3\MICROS~1\protheus\projeto\INTEGR~1\CAEST0~2.PRW"






Function U_CAEST003()

Local _lErro      := .F. 
Local _cDescErro:= ""
Local _cLinha     := ""

Local _cProduto
Local _cLocal
Local _nQuant
Local _lConout := .t. 
Local aOpenTable      := {"SZ5","SD3","SD5","SB2","SB8"}
Local _cFilial
Private _cAlias := GetNextAlias()


RpcClearEnv()
RPCSetType(3)
RPCSetEnv("01","01","","","","",aOpenTable)

_cFilial := xfilial("SZ5")














__execSql(_cAlias," Select *, SZ5.R_E_C_N_O_ AS RECNOSZ5 From  "+RetSqlName('SZ5')+" SZ5 Where D_E_L_E_T_= ' ' AND Z5_FILIAL =  "+___SQLGetValue(_CFILIAL)+" AND Z5_SITUAC = 'N'",{{"Z5_QUANT","N",12,2},{"Z5_EMISSAO","D",8,0}},.T.)




dbSelectArea("SAH")
dbSetOrder(1)
if ! dbSeek(xfilial("SAH")+alltrim((_cAlias)->(Z5_UM))  )

	_MsgErro := "Unidade de Medida "+(_cAlias)->(Z5_UM)+ " não encontrado na tabela SAH"

Endif





(_cAlias)->(dbGotop())
While ! (_cAlias)->(eof())










	_lRet := Internos((_cAlias)->Z5_TM , (_cAlias)->Z5_DOC , (_cAlias)->Z5_EMISSAO, (_cAlias)->Z5_COD, (_cAlias)->Z5_UM , (_cAlias)->Z5_QUANT, "01", (_cAlias)->Z5_CC, (_cAlias)->Z5_ITEMCTA, (_cAlias)->Z5_OP  )

	(_cAlias)->(dbSkip())
End

(_cAlias)->(dbCloseArea())
RpcClearEnv()

Return





Static Function Internos(_cTM,  _cDoc,  _dEmissao, _cProd, _cUM,  _nQuant, _cLocal, _cCC, _cItemCta, _cOP )
Local _aTAB_SD3 := {}

lMsHelpAuto   := .T. 
lMsErroAuto   := .F. 

_aTabSD3 := {}

aAdd(_aTabSD3, {"D3_TM"			,_cTM		,NIL})
aAdd(_aTabSD3, {"D3_DOC"		,_cDoc		,NIL})
aAdd(_aTabSD3, {"D3_EMISSAO"	,dDataBase	,NIL})
aAdd(_aTabSD3, {"D3_COD"		,_cProd		,NIL})
aAdd(_aTabSD3, {"D3_UM"			,_cUM		,NIL})
aAdd(_aTabSD3, {"D3_QUANT"		,_nQuant	,NIL})
aAdd(_aTabSD3, {"D3_LOCAL" 		,_cLocal	,NIL})
aAdd(_aTabSD3, {"D3_CC" 		,_cCC		,NIL})
aAdd(_aTabSD3, {"D3_OP" 		,_cOP		,NIL})
aAdd(_aTabSD3, {"D3_ITEMCTA" 	,_cItemCta	,NIL})

_aTmp := U_SLVetSx3(_aTABSD3,"SD3")
_aTABSD3 := {}
_aTABSD3 := aClone(_aTmp)

if _cTM == "002"
	MsExecAuto({|x,y| MATA250(x,y)}, _aTabSD3, 3)
Else
	MsExecAuto({|x,y| MATA240(x,y)}, _aTabSD3, 3)
Endif

If lMsErroAuto
	_cErro := MostraErro()
	conout(_cErro)
Else

	dbSelectArea("SZ5")
	dbGoTo( (_cAlias)->RECNOSZ5  )
	Reclock("SZ5", .F. )
	SZ5->Z5_SITUAC 	:= "Y"
	SZ5->Z5_NUMSEQ  := SD3->D3_NUMSEQ
	SZ5->(MsUnlock())

Endif

Return(! lMsErroAuto)