#INCLUDE "FINA430.CH"
#include "fileio.ch"
#Include "PROTHEUS.CH"

Static lFWCodFil := FindFunction("FWCodFil")

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FinA430  ³ Autor ³ Pilar Sanchez         ³ Data ³ 26/05/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorno da comunica‡„o banc ria - Pagar                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FinA430(nPosArotina)                                       ³±±
±±³			 ³ nPosArotina - Recebe a posicao do array aRotina para       ³±±
±±³          ³ executar a funcao escolhida                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function FinA430J(nPosAuto)
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
Local lOk		:= .F.
Local aSays 	:= {}
Local aButtons  := {}
Local cPerg		:= "AFI430"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de baixas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemToAnsi( "Retorno CNAB Pagar" )  //	PRIVATE cCadastro := OemToAnsi( STR0006 )  //"Retorno CNAB Pagar"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                 ³
//³                                                    ³
//³ Parametros                                         ³
//³                                                    ³
//³ MV_PAR01: Mostra Lanc. Contab  ? Sim Nao           ³
//³ MV_PAR02: Aglutina Lanc. Contab? Sim Nao           ³
//³ MV_PAR03: Arquivo de Entrada   ?                   ³
//³ MV_PAR04: Arquivo de Config    ?                   ³
//³ MV_PAR05: Banco                ?                   ³
//³ MV_PAR06: Agencia              ?                   ³
//³ MV_PAR07: Conta                ?                   ³
//³ MV_PAR08: SubConta             ?                   ³
//³ MV_PAR09: Contabiliza          ?                   ³ 
//³ MV_PAR10: Padrao Cnab          ? Modelo1 Modelo 2  ³
//³ MV_PAR11: Processa filiais     ? Modelo1 Modelo 2  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 

AjustaSX1(cPerg)

If lPanelFin
	lPergunte := PergInPanel(cPerg,.T.)
Else
   lPergunte := pergunte(cPerg,.T.)
Endif

If lPergunte
	MV_PAR03 := UPPER(MV_PAR03)

	dbSelectArea("SE2")
	dbSetOrder(1)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa o log de processamento                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcLogIni( aButtons )

	If nPosAuto <> Nil
		lOk := .T.
	Else
		aADD(aSays,"Esta rotina permite receber o arquivo de retorno do CNAB de pagamentos, com base nas")
		aADD(aSays,"ocorrências cadastradas e com os parametros configurados.")
		If lPanelFin  //Chamado pelo Painel Financeiro			
			aButtonTxt := {}			
			If Len(aButtons) > 0
				AADD(aButtonTxt,{STR0002,STR0002,aButtons[1][3]}) // Visualizar			
			Endif
			AADD(aButtonTxt,{"Parametros","Parametros", {||Pergunte("AFI430",.T. )}}) // Parametros						
			FaMyFormBatch(aSays,aButtonTxt,{||lOk:=.T.},{||lOk:=.F.})
			
			
		Else		
			aADD(aButtons, { 5,.T.,{|| Pergunte("AFI430",.T. ) } } )
			aADD(aButtons, { 1,.T.,{|| lOk := .T.,FechaBatch()}} )
			aADD(aButtons, { 2,.T.,{|| FechaBatch() }} )
			FormBatch( cCadastro, aSays, aButtons ,,,535)		
		EndIf		
   Endif
	If lOk
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("INICIO")
		
		fa430gera("SE2")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("FIM")
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Recupera a Integridade dos dados                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE2")
	dbSetOrder(1)
	
EndIf
		

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fA430Ger ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Comunicacao Bancaria - Retorno                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA430Ger(cAlias)                                           ³±±
±±³          ³ cAlias - Alias corrente para executar a funcao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA430                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fa430gera(cAlias)
PRIVATE cLotefin := Space(TamSX3("EE_LOTECP")[1])
PRIVATE nTotAbat := 0,cConta := " "
PRIVATE nHdlBco := 0,nHdlConf := 0,nSeq := 0 ,cMotBx := "DEB"
PRIVATE nValEstrang := 0
PRIVATE cMarca := GetMark()
PRIVATE aAC := { "Abandona","Confirma" }  		//PRIVATE aAC := { STR0004,STR0005 }  //"Abandona"###"Confirma"
PRIVATE nTotAGer := 0
PRIVATE VALOR  := 0
PRIVATE ABATIMENTO := 0
Private nAcresc, nDecresc

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para Tratamento baixa - Citibank³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("F430CIT")
	ExecBlock("F430CIT",.F.,.F.)
Endif

Processa({|lEnd| fa430Ger(cAlias)})  // Chamada com regua

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fecha os Arquivos ASCII ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nHdlBco > 0
	FCLOSE(nHdlBco)
Endif	           

If nHdlConf > 0
	FCLOSE(nHdlConf)
Endif	

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fA430Gera³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Comunicacao Bancaria - Retorno                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA430Ger(cAlias)                                           ³±±
±±³          ³ cAlias - Alias corrente para executar a funcao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA430                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fA430Ger(cAlias)

Local cPosNum,cPosData,cPosDesp,cPosDesc,cPosAbat,cPosPrin,cPosJuro,cPosMult,cPosForne
Local cPosOcor,cPosTipo,cPosCgc, cRejeicao, cPosDebito, cPosRejei
Local cChave430,cNumSe2,cChaveSe2
Local cArqConf,cArqEnt,cPosNsNum
Local cTabela    := "17",cPadrao,cLanca,cNomeArq
Local cFilOrig   := cFilAnt	// Salva a filial para garantir que nao seja alterada em customizacao
Local xBuffer
Local lPosNum    := .f., lPosData := .f.
Local lPosDesp   := .f., lPosDesc := .f., lPosAbat := .f.
Local lPosPrin   := .f., lPosJuro := .f., lPosMult := .f.
Local lPosOcor   := .f., lPosTipo := .f., lMovAdto := .F.
Local lPosNsNum  := .f., lPosForne:= .f., lPosRejei:= .f.
Local lPosCgc    := .f., lPosdebito:=.f.
Local lDesconto,lContabiliza,lUmHelp := .F.,lCabec := .f.
Local lPadrao    := .f., lBaixou := .f., lHeader := .f.
Local lF430VAR   := ExistBlock("F430VAR"),lF430Baixa := ExistBlock("F430BXA")
Local lF430Rej   := ExistBlock("F430REJ"),lFa430Oco  := ExistBlock("FA430OCO")
Local lFa430Se2  := ExistBlock("FA430SE2"),lFa430Pa  := ExistBlock("FA430PA")
Local lFa430Fil  := Existblock("FA430FIL")
Local lRet       := .T.
Local nLidos,nLenNum,nLenData,nLenDesp,nLenDesc,nLenAbat,nLenForne,nLenRejei
Local nLenPrin,nLenJuro,nLenMult,nLenOcor,nLenTipo,nLenCgc, nLenDebito,nLenNsNum
Local nTotal     := 0,nPos,nPosEsp,nBloco := 0,nF:=0
Local nSavRecno  := Recno()
Local nTamForn   := Tamsx3("E2_FORNECE")[1]
Local nTamOcor   := TamSx3("EB_REFBAN")[1]
Local aTabela    := {},aLeitura := {},aValores := {},aCampos := {}
Local dDebito
Local lNewIndice := FaVerInd()  //Verifica a existencia dos indices de IDCNAB sem filial
Local nTamPre	:= TamSX3("E1_PREFIXO")[1]
Local nTamNum	:= TamSX3("E1_NUM")[1] 
Local nTamPar	:= TamSX3("E1_PARCELA")[1]
Local nTamTit	:= nTamPre+nTamNum+nTamPar
Local lAchouTit := .F.
Local nTamBco	  := Tamsx3("A6_COD")[1]
Local nTamAge    := TamSx3("A6_AGENCIA")[1]
Local nTamCta    := Tamsx3("A6_NUMCON")[1]
Local lMultNat := IIF(mv_par12==1,.T.,.F.)
Local aColsSEV := {}
Local lOk := .F. //Controla se foi confirmada a distribuicao 
Local nTotLtEZ := 0	//Totalizador da Bx Lote Mult Nat CC
Local nHdlPrv		:= 0
Local aArqConf	:= {}	// Atributos do arquivo de configuracao
Local lCtbExcl	:= !Empty( xFilial("CT2") )
Local aFlagCTB		:= {}
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)

//DDA - Debito Direto Autorizado
Local lUsaDDA		:= If (FindFunction("FDDAInUse"),FDDAInUse(),.F.)
Local lProcDDA		:= .F.

Private cBanco, cAgencia, cConta
Private cHist070, cArquivo
Private lAut:=.f., nTotAbat := 0
Private cCheque := " ", cPortado := " ", lAdiantamento := .F.
Private cNumBor := " ", cForne  := " " , cCgc := "", cDebito := ""
Private cModSpb := "1"  // Colocado apenas para não dar problemas nas rotinas de baixa
Private cAutentica := Space(25)  //Autenticacao retornada pelo segmento Z
Private cLote   := Space(TamSX3("EE_LOTECP")[1])

lChqPre := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no Banco indicado                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBanco  := mv_par05
cAgencia:= mv_par06
cConta  := mv_par07
cSubCta := mv_par08

dbSelectArea("SA6")
DbSetOrder(1)
SA6->( dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta) )

dbSelectArea("SEE")
DbSetOrder(1)
SEE->( dbSeek(xFilial("SEE")+cBanco+cAgencia+cConta+cSubCta) )
nBloco := If( SEE->EE_NRBYTES==0,402,SEE->EE_NRBYTES+2)
If !SEE->( found() )
	Help(" ",1,"PAR150")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o log de processamento com o erro  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcLogAtu("ERRO","PAR150",Ap5GetHelp("PAR150"))

	lRet:= .F.
Endif

If lRet .And. GetMv("MV_BXCNAB") == "S" // Baixar arquivo recebidos pelo CNAB aglutinando os valores
	If Empty(SEE->EE_LOTECP)
		cLoteFin := StrZero( 1, TamSX3("EE_LOTECP")[1] )
	Else
		cLoteFin := FinSomaLote(SEE->EE_LOTECP)
	EndIf
EndIf

If lRet
	cTabela := Iif( Empty(SEE->EE_TABELA), "17" , SEE->EE_TABELA )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a tabela existe           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SX5" )
	If !SX5->( dbSeek( xFilial("SX5")+ cTabela ) )
		Help(" ",1,"PAR430")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento com o erro  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","PAR430",Ap5GetHelp("PAR430"))
	
		lRet := .F.
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe inidce IDCNAB para multiplas filiais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. mv_par11 == 2

	If !lNewIndice                       

		// Não foi encontrado o índice por IDCNAB sem Filial. ### Executar o compatibizador do ambiente Financeiro (U_UPDFIN).
		PutHelp( "PNOIDCNAB",	{"Não foi encontrado o índice por IDCNAB", "sem Filial."},;
								{"The index IDCNAB without Branch not found." },;
								{"No encontro el indice por IDCNAB sin", "Sucursal."} )
								
		PutHelp( "SNOIDCNAB",	{"Executar o compatibizador do ambiente", "Financeiro (U_UPDFIN)."},;
								{"Run the compatibility Financial ", "(U_UPDFIN)." },;
								{"Ejecutar el compatibilizador del entorno", "Financeiro (U_UPDFIN)."} )
	
		Help( "  ", 1, "NOIDCNAB" )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento com o erro  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu( "ERRO", "NOIDCNAB", Ap5GetHelp("NOIDCNAB"))
		lRet := .F.                                           
		
	Else

		If lCtbExcl
			// A Contabilidade está em modo exclusivo e foi solicitado o processamento de todas as filiais.
			// Neste caso, o sistema não realiza a contabilização on-line. Confirma mesmo assim?
			lRet := MsgYesNo( "Sim" , "Nao" )	//		lRet := MsgYesNo( STR0015, STR0010 )
		EndIf

	EndIf	

EndIf
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se arquivo ja foi processado anteriormente	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !(Chk430File())
	lRet := .F.
Endif

While lRet .And. !SX5->(Eof()) .and. SX5->X5_TABELA == cTabela
	AADD(aTabela,{Alltrim(X5Descri()),PadR(AllTrim(SX5->X5_CHAVE),3)})
	SX5->(dbSkip( ))
EndDo

If lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o numero do Lote   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX5")
	dbSeek(xFilial("SX5")+"09FIN")
	cLote := Substr(X5Descri(),1,4)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Abre arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqConf:=mv_par04
	If !FILE(cArqConf)
		Help(" ",1,"NOARQPAR")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento com o erro  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","NOARQPAR",Ap5GetHelp("NOARQPAR"))

		lRet:= .F. 
	ElseIf ( MV_PAR10 == 1 )
		nHdlConf:=FOPEN(cArqConf,0+64)
	EndIF
EndIf
	
If lRet .And. ( MV_PAR10 == 1 )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Lˆ arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLidos:=0
	FSEEK(nHdlConf,0,0)
	nTamArq:=FSEEK(nHdlConf,0,2)
	FSEEK(nHdlConf,0,0)
	While nLidos <= nTamArq
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o tipo de qual registro foi lido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		xBuffer:=Space(85)
		FREAD(nHdlConf,@xBuffer,85)                          

		IF SubStr(xBuffer,1,1) == CHR(1)
			nLidos+=85
			Loop
		EndIF
		IF SubStr(xBuffer,1,1) == CHR(3)
			Exit
		EndIF
		IF !lPosNum
			cPosNum:=Substr(xBuffer,17,10)
			nLenNum:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosNum:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosData
			cPosData:=Substr(xBuffer,17,10)
			nLenData:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosData:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosDesp
			cPosDesp:=Substr(xBuffer,17,10)
			nLenDesp:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDesp:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosDesc
			cPosDesc:=Substr(xBuffer,17,10)
			nLenDesc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDesc:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosAbat
			cPosAbat:=Substr(xBuffer,17,10)
			nLenAbat:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosAbat:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosPrin
			cPosPrin:=Substr(xBuffer,17,10)
			nLenPrin:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosPrin:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosJuro
			cPosJuro:=Substr(xBuffer,17,10)
			nLenJuro:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosJuro:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosMult
			cPosMult:=Substr(xBuffer,17,10)
			nLenMult:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosMult:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosOcor
			cPosOcor:=Substr(xBuffer,17,10)
			nLenOcor:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosOcor:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosTipo
			cPosTipo:=Substr(xBuffer,17,10)
			nLenTipo:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosTipo:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosNsNum
			cPosNsNum := Substr(xBuffer,17,10)
			nLenNsNum := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosNsNum := .t.
			nLidos += 85
			Loop
		EndIF
		IF !lPosRejei
      	cPosRejei := Substr(xBuffer,17,10)
			nLenRejei := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosRejei := .t.
			nLidos += 85
			Loop
		EndIF
		IF !lPosForne
      	cPosForne := Substr(xBuffer,17,10)
			nLenForne := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosForne := .t.
			nLidos += 85
			Loop
		EndIF
		IF !lPosCgc
	      	cPosCgc   := Substr(xBuffer,17,10)
			nLenCgc   := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosCgc   := .t.
			nLidos += 85
			Loop
		EndIF
		IF !lPosDebito
			cPosDebito:=Substr(xBuffer,17,10)
			nLenDebito:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDebito:=.t.
			nLidos+=85
			Loop
		EndIF
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ fecha arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Fclose(nHdlConf)
EndIf 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abre arquivo enviado pelo banco ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	cArqEnt:=mv_par03
	IF !FILE(cArqEnt)
		Help(" ",1,"NOARQENT")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento com o erro  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","NOARQENT",Ap5GetHelp("NOARQENT"))

		lRet:= .F.
	Else
		nHdlBco:=FOPEN(cArqEnt,0+64)
	EndIF
EndIf

If lRet

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Lˆ arquivo enviado pelo banco ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLidos:=0
	FSEEK(nHdlBco,0,0)
	nTamArq:=FSEEK(nHdlBco,0,2)
	FSEEK(nHdlBco,0,0)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha o cursor e o salva para poder moviment -lo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcRegua( nTamArq/nBloco )
	               
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Certifico de que o TRB esta fechado.                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (Select("TRB")<>0)
		dbSelectArea("TRB")
		dbCloseArea()
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera arquivo de Trabalho                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aCampos,{"FILMOV","C",IIf( lFWCodFil, FWGETTAMFILIAL, 2 ),0})
	AADD(aCampos,{"BANCO","C",TamSx3("A6_COD")[1],0})
	AADD(aCampos,{"AGENCIA","C",TamSx3("A6_AGENCIA")[1],0})
	AADD(aCampos,{"CONTA","C",TamSx3("A6_NUMCON")[1],0})
	AADD(aCampos,{"DATAD","D",08,0})
	AADD(aCampos,{"TOTAL","N",17,2})
	
	If Select("TRB") == 0
		cNomeArq:=CriaTrab(aCampos)
//		dbUseArea( .T., __cRDDNTTS, cNomeArq, "TRB", if(.F. .Or. .F., !.F., NIL), .F. )
		dbUseArea( .T., "DBFCDX", cNomeArq, "TRB",.T.,.F.)
		IndRegua("TRB",cNomeArq,"FILMOV+BANCO+AGENCIA+CONTA+Dtos(DATAD)",,,"")
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega atributos do arquivo de configuracao                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aArqConf := Directory(mv_par04)
	
	Begin Transaction

	While nLidos <= nTamArq
		IncProc()
		nDespes :=0
		nDescont:=0
		nAbatim :=0
		nValRec :=0
		nJuros  :=0
		nMulta  :=0
		nValCc  :=0
		nValPgto:= 0
		nCM     := 0
		ABATIMENTO := 0
	
		cFilAnt := cFilOrig					// sempre restaura a filial original 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tipo qual registro foi lido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( MV_PAR10 == 1 )
			xBuffer:=Space(nBloco)
			FREAD(nHdlBco,@xBuffer,nBloco)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Considera a primeira linha sempre³
			//³ como um cabe‡alho                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF !lHeader
				lHeader := .T.
				nLidos+=nBloco
				Loop
			EndIF
	
			If SubStr(xBuffer,1,1) == "1" .or. Substr(xBuffer,1,3) == "001" .or.;
				(cBanco == "409" .and. SubStr(xBuffer,1,1) == "2")  // Unibanco    
								
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Lˆ os valores do arquivo Retorno ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cNumTit :=Substr(xBuffer,Int(Val(Substr(cPosNum, 1,3))),nLenNum )
				cData   :=Substr(xBuffer,Int(Val(Substr(cPosData,1,3))),nLenData)
				cData   :=ChangDate(cData,SEE->EE_TIPODAT)
				dBaixa  :=Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5),"ddmm"+Replicate("y",Len(Substr(cData,5))))
				dDebito :=dBaixa		// se nao for preenchido, usa dBaixa
				cTipo   :=Substr(xBuffer,Int(Val(Substr(cPosTipo, 1,3))),nLenTipo )
				cNsNum  := " "
			
				If !Empty(cPosDesp)
					nDespes:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosDesp,1,3))),nLenDesp))/100,2)
				EndIf
				If !Empty(cPosDesc)
					nDescont:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosDesc,1,3))),nLenDesc))/100,2)
				EndIf
				If !Empty(cPosAbat)
					nAbatim:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosAbat,1,3))),nLenAbat))/100,2)
				EndIf
				If !Empty(cPosPrin)
					nValPgto :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosPrin,1,3))),nLenPrin))/100,2)
				EndIF
				If !Empty(cPosJuro)
					nJuros  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosJuro,1,3))),nLenJuro))/100,2)
				EndIf
				If !Empty(cPosMult)
					nMulta  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosMult,1,3))),nLenMult))/100,2)
				EndIf
				If !Empty(cPosNsNum)
					cNsNum  :=Substr(xBuffer,Int(Val(Substr(cPosNsNum,1,3))),nLenNsNum)
				EndIf
				IF !Empty(cPosRejei)
					cRejeicao  :=Substr(xBuffer,Int(Val(Substr(cPosRejei,1,3))),nLenRejei)
				End
				IF !Empty(cPosForne)
					cForne  :=Substr(xBuffer,Int(Val(Substr(cPosForne,1,3))),nLenForne)
				End
		
				cOcorr := Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor)
				cOcorr := PadR(AllTrim(cOcorr),nTamOcor)
		
				If !Empty(cPosCgc)
					cCgc  :=Substr(xBuffer,Int(Val(Substr(cPosCgc,1,3))),nLenCgc)
				Endif
				If !Empty(cPosDebito)
					cDebito :=Substr(xBuffer,Int(Val(Substr(cPosDebito,1,3))),nLenDebito)
					cDebito :=ChangDate(cDebito,SEE->EE_TIPODAT)
					If !Empty(cDebito)
						dDebito :=Ctod(Substr(cDebito,1,2)+"/"+Substr(cDebito,3,2)+"/"+Substr(cDebito,5),"ddmm"+Replicate("y",Len(Substr(cDebito,5))))
					Endif
				Endif
				nCM     := 0

				//Processo DDA - Bradesco
				lProcDDA := .F.
				cRastro	:= Substr(xBuffer,264,2)     //Operacao de rastreamento = 30 (Fixo) 
				cDDA		:= Substr(xBuffer,279,2)		//Operacao de rastreamento = "FS" (Fixo)

				//Rastreamento DDA - Bradesco
				If lUsaDDA .and. cBanco = "237" .And. cRastro == "30" .and. cDDA == "FS"

					cBcoForn := Substr(xBuffer,096,3)		//01-03 Banco do cedente - Fornecedor
					cCodBar	:= ""									//Codigo de barras completo
					cFatorVc	:= ""									//Fator de Vencimento
					cMoeda	:= "9"								//Moeda do titulo (9 = Real)
					cDV		:= ""									//Digito verificador do codigo de barras (sera calculado)
					cVencto	:= ""									//Data de vencimento
					cOcorr	:= PadR("FS",nTamOcor)			//Forco Ocorrencia pois a mesma pode voltar vazia em caso de rastreamento DDA
					
					//Calculo do Fator de Vencimento
					cVencto	:= Substr(xBuffer,166,8)
					cVencto  := ChangDate(cVencto,SEE->EE_TIPODAT)
					cVencto  := Substr(cVencto,1,2)+"/"+Substr(cVencto,3,2)+"/"+Substr(cVencto,5)
					cFatorVc	:= StrZero(ctod(cVencto) - ctod("07/10/97"),4)			//Fator de Vencimento

					//Valor do documento
					cValPgto := Substr(xBuffer,195,10)				//Valor do Titulo

					//Bando do Cedente = Bradesco
					If cBcoForn == "237"

						//Campo Livre do codigo de barras
						cCpoLivre:= Substr(xBuffer,100,4)+ ;		//Agencia
										Substr(xBuffer,137,2)+ ;		//Carteira
										Substr(xBuffer,139,11)+ ;		//Nosso Numero
										Substr(xBuffer,111,7)+ ;		//Conta corrente
										"0"									//Zero (fixo)
			
					//Bando do Cedente <> Bradesco	
					Else

						cCpoLivre:= Substr(xBuffer,374,25)		//Campo Livre do codigo de barras

					Endif

					//Calculo do digito verificador do codigo de barras
					cDV := DV_BarCode(cBcoForn + cMoeda + cFatorVc + cValPgto + cCpoLivre)

					//Montagem do código de barras
					cCodBar :=	cBcoForn + ;				//01-03 - Codigo do banco
									cMoeda	+ ;				//04-04 - Codigo da moeda
									cDV		+ ;				//05-05 - Digito verificador
									cFatorVc + ;				//06-09 - Fator vencimento
									cValPgto	+ ;				//10-19 - Valor do documento	
									cCpoLivre					//20-44 - Campo Livre


					If !Empty(cCodBar)
						lProcDDA := .T.
					Endif

				Endif
	   
			   If lFa430Fil
			    	Execblock("FA430FIL",.F.,.F.,{xBuffer} )
			   Endif
			   
				If lF430Var
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ o array aValores ir  permitir ³
					//³ que qualquer exce‡„o ou neces-³
					//³ sidade seja tratado no ponto  ³
					//³ de entrada em PARAMIXB        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					// Estrutura de aValores
					//	Numero do T¡tulo	- 01
					//	data da Baixa		- 02
					// Tipo do T¡tulo		- 03
					// Nosso Numero		- 04
					// Valor da Despesa	- 05
					// Valor do Desconto	- 06
					// Valor do Abatiment- 07
					// Valor Pagamento   - 08
					// Juros					- 09
					// Multa					- 10
					// Fornecedor			- 11
					// Ocorrencia			- 12
					// CGC					- 13
					// nCM					- 14
					// Rejeicao				- 15
					// Linha Inteira		- 16
					
					aValores := ( { cNumTit, dBaixa, cTipo,;
										 cNsNum, nDespes, nDescont,;
										 nAbatim, nValPgto, nJuros,;
										 nMulta, cForne, cOcorr,;
										 cCGC, nCM, cRejeicao, xBuffer })
	
					ExecBlock("F430VAR",.F.,.F.,{aValores})
	
				Endif
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica especie do titulo    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPos := Ascan(aTabela, {|aVal|aVal[1] == Alltrim(Substr(cTipo,1,3))})
				If nPos != 0
					cEspecie := aTabela[nPos][2]
				Else
					cEspecie	:= "  "
				EndIf
				If cEspecie $ MVABATIM		// Nao lˆ titulo de abatimento
					nLidos += nBloco
					Loop
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de entrada para permitir ou nao a baixa de ³
				//³ um determinadotipo de titulo. PA por exemplo.    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lFa430Pa
					If !(ExecBlock("FA430PA",.F.,.F.,cEspecie))
						nLidos += nBloco
						Loop
					Endif
				Endif
			Else
				nLidos += nBloco
				Loop
			EndIf
		Else
			aLeitura := ReadCnab2(nHdlBco,cArqConf,nBloco,aArqConf)
			cNumTit  := SubStr(aLeitura[1],1, nTamTit)
			cData    := aLeitura[04]
			cData    := ChangDate(cData,SEE->EE_TIPODAT)
			dBaixa   := Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5),"ddmm"+Replicate("y",Len(Substr(cData,5))))
			cTipo    := aLeitura[02]
			cNsNum   := aLeitura[11]
			nDespes  := aLeitura[06]
			nDescont := aLeitura[07]
			nAbatim  := aLeitura[08]
			nValPgto := aLeitura[05]
			nJuros   := aLeitura[09]
			nMulta   := aLeitura[10]
			cNsNum   := aLeitura[11]
			cOcorr   := aLeitura[03]
			cOcorr   := PadR(AllTrim(cOcorr),nTamOcor)
			cForne   := aLeitura[16]
			dDebito	:= dBaixa   
			xBuffer	:= aLeitura[17]
			
			//Segmento Z - Autenticacao
			If Len(aLeitura) > 17
				cAutentica := aLeitura[18]
			Endif
				
			//CGC
			If Len(aLeitura) > 19
				cCgc := aLeitura[20]
			Endif

			//Banco Agencia e Conta da Baixa
			If Len(aLeitura) > 20
				cBanco	:= PAD(aLeitura[21],nTamBco)
				cAgencia := PAD(aLeitura[22],nTamAge)
				cConta	:= PAD(aLeitura[23],nTamCta)
			Else
				cBanco  := mv_par05
				cAgencia:= mv_par06
				cConta  := mv_par07
			Endif

			//DDA - Debito Direto Autorizado
			If lUsaDDA .and. Len(aLeitura) > 23
				//Caso o CNPJ do Fornecedor seja retornado no Segmento H, assumo este valor
				If !Empty(aLeitura[24]) .and. Substr(aLeitura[24],1,7) != "0000000"
					cCgc := aLeitura[24]    
				Endif
				cCodBar := aLeitura[25]
				If !Empty(cCodBar)
					lProcDDA := .T.
				Endif
			
			Endif
			
			If lF430Var
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ o array aValores ir  permitir ³
				//³ que qualquer exce‡„o ou neces-³
				//³ sidade seja tratado no ponto  ³
				//³ de entrada em PARAMIXB        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				// Estrutura de aValores
				//	Numero do T¡tulo	- 01
				//	data da Baixa		- 02
				// Tipo do T¡tulo		- 03
				// Nosso Numero		- 04
				// Valor da Despesa	- 05
				// Valor do Desconto	- 06
				// Valor do Abatiment- 07
				// Valor Pagamento   - 08
				// Juros					- 09
				// Multa					- 10
				// Fornecedor			- 11
				// Ocorrencia			- 12
				// CGC					- 13
				// nCM					- 14
				// Rejeicao				- 15
				// Linha Inteira		- 16
	         // Autenticacao      - 17
	         // Banco             - 18	         
	         // Agencia           - 19
	         // Conta             - 20	         
				aValores := ( { cNumTit, dBaixa, cTipo,;
									 cNsNum, nDespes, nDescont,;
									 nAbatim, nValPgto, nJuros,;
									 nMulta, cForne, cOcorr,;
	                         cCGC, nCM,cRejeicao,xBuffer,;
	                         cAutentica,cBanco,cAgencia,cConta })
	
				ExecBlock("F430VAR",.F.,.F.,{aValores})
	
			Endif
	
			If Empty(cNumTit)
				nLidos += nBloco
				Loop
			Endif		

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica especie do titulo    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPos := Ascan(aTabela, {|aVal|aVal[1] == Alltrim(Substr(cTipo,1,3))})
			If nPos != 0
				cEspecie := aTabela[nPos][2]
			Else
				cEspecie	:= "  "
			EndIf
			If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
				Loop
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada para permitir ou nao a baixa de ³
			//³ um determinadotipo de titulo. PA por exemplo.    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFa430Pa
				If !(ExecBlock("FA430PA",.F.,.F.,cEspecie))
					Loop
				Endif
			Endif
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe o titulo no SE2. Caso este titulo nao seja ³
		//³ localizado, passa-se para a proxima linha do arquivo retorno. ³
		//³ O texto do help sera' mostrado apenas uma vez, tendo em vista ³
		//³ a possibilidade de existirem muitos titulos de outras filiais.³
		//³ OBS: Sera verificado inicialmente se nao existe outra chave   ³
		//³ igual para tipos de titulo diferentes.                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SE2")
		dbSetOrder( 1 )
		lHelp := .F.
		lAchouTit := .F.

		aValores := ( { cNumTit, dBaixa, cTipo, cNsNum, nDespes, nDescont, nAbatim, nValPgto, nJuros, nMulta, cForne, cOcorr, cCGC, nCM, cRejeicao, xBuffer })
		//Processamento normal - Nao se trata de processamento de arquivo de DDA
		If !lProcDDA
			// Ponto de entrada para posicionar o SE2
			If lFa430SE2 .and. !lProcDDA
				ExecBlock("FA430SE2", .F.,.F.,{aValores})
			Else
		   		// Se processa todas as filiais, tem o novo indice somente por IDCNAB e a filial da SE2 estah preenchida.
				If (mv_par11 == 2 .And. lNewIndice) .and. !Empty(xFilial("SE2"))
					//Busca por IdCnab (sem filial)
					SE2->(dbSetOrder(13)) // IdCnab
					If SE2->(MsSeek(Substr(cNumTit,1,10)))
						cFilAnt	:= SE2->E2_FILIAL
						If lCtbExcl
							mv_par09 := 2  //Desligo contabilizacao on-line				
						EndIf	
					Endif
				Else
					//Busca por IdCnab
					SE2->(dbSetOrder(11)) // Filial+IdCnab
					SE2->(MsSeek(xFilial("SE2")+	Substr(cNumTit,1,10)))
				Endif
	
				//Se nao achou, utiliza metodo antigo (titulo)
				If SE2->(!Found())
					SE2->(dbSetOrder(1))
					//Chave retornada pelo banco
					cChave430 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
					While !lAchouTit
						If !dbSeek(xFilial()+cChave430)
							nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,3))},nPos+1)
							If nPos != 0
								cEspecie := aTabela[nPos][2]
								cChave430 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
							Else
								Exit
							Endif
						Else
							lAchouTit := .T.
						Endif
					Enddo					
	
					//Chave retornada pelo banco com a adicao de espacos para tratar chave enviada ao banco com
					//tamanho de nota de 6 posicoes e retornada quando o tamanho da nota e 9 (atual)
					If !lAchouTit
						cNumTit := SubStr(cNumTit,1,nTamPre)+Padr(Substr(cNumTit,4,6),nTamNum)+SubStr(cNumTit,10,nTamPar)					
						cChave430 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
						nPos := Ascan(aTabela, {|aVal|aVal[1] == Alltrim(Substr(cTipo,1,3))})
						While !lAchouTit
							If !dbSeek(xFilial()+cChave430)
								nPos := Ascan(aTabela, {|aVal|aVal[1] == AllTrim(Substr(cTipo,1,3))},nPos+1)
								If nPos != 0
									cEspecie := aTabela[nPos][2]
									cChave430 := IIf(!Empty(cForne),Pad(cNumTit,nTamTit)+cEspecie+SubStr(cForne,1,nTamForn),Pad(cNumTit,nTamTit)+cEspecie)
								Else
									Exit
								Endif					
							Else
								lAchouTit := .T.
							Endif
						Enddo
					Endif
	
					//Se achou o titulo, verificar o CGC do fornecedor
					If lAchouTit
						cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
						cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
						nPosEsp	  := nPos	// Gravo nPos para volta-lo ao valor inicial, caso encontre o titulo
	
						While !Eof() .and. SE2->E2_FILIAL+cChaveSe2 == xFilial("SE2")+cChave430
							nPos := nPosEsp
							If Empty(cCgc)
								Exit
							Endif
							dbSelectArea("SA2")
							If dbSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA)
								If Substr(SA2->A2_CGC,1,14) == cCGC .or. StrZero(Val(SA2->A2_CGC),14,0) == StrZero(Val(cCGC),14,0)
									Exit
								Endif
							Endif
							dbSelectArea("SE2")
							dbSkip()
							cNumSe2   := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
							cChaveSe2 := IIf(!Empty(cForne),cNumSe2+SE2->E2_FORNECE,cNumSe2)
							nPos 	  := 0
						Enddo
					EndIF
				Else
					nPos := 1
				Endif
			
				If nPos == 0
					lHelp := .T.
				EndIF
			Endif	
			
			If !lUmHelp .And. lHelp
				Help(" ",1,"NOESPECIE",,cNumTit+	" "+cEspecie,5,1)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o log de processamento com o erro  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ProcLogAtu("ERRO","NOESPECIE",Ap5GetHelp("NOESPECIE"))
	
				lUmHelp := .T.
			Endif
		Endif

		If !lHelp
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica codigo da ocorrencia ³
	 		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SEB")
			If !(dbSeek(xFilial("SEB")+mv_par05+cOcorr+"P"))
				Help(" ",1,"FA430OCORR")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o log de processamento com o erro  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ProcLogAtu("ERRO","FA430OCORR",Ap5GetHelp("FA430OCORR"))
	
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Reposicionar o SEB para uma chave diferente, que considere³ 
			//³ tamb‚m, campos espec¡ficos criados no SEB.                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFa430Oco
				ExecBlock("FA430OCO", .F., .F., {aValores})
			Endif
			dbSelectArea("SE2")
			IF ( SEB->EB_OCORR $ "01#06#07#08" )      //Baixa do Titulo
				IF nF == 0
					nF:=1
					cPadrao:="530"
					lPadrao:=VerPadrao(cPadrao)
					lContabiliza:= Iif(mv_par09==1,.T.,.F.)
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Monta Contabilizacao.         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lCabec .and. lPadrao .and. lContabiliza
					nHdlPrv := HeadProva( cLote,;
					                      "FINA430",;
					                      substr( cUsuario, 7, 6 ),;
					                      @cArquivo )

					lCabec := .T.
				EndIf

				nValEstrang := SE2->E2_SALDO
				lDesconto   := .F.
				nTotAbat	:= SumAbatPag(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,;
								SE2->E2_FORNECE,SE2->E2_MOEDA,"S",dBaixa,SE2->E2_LOJA)
				ABATIMENTO  := nTotAbat

				If Empty(cBanco+cAgencia+cConta)
					cBanco      := mv_par05
					cAgencia    := mv_par06
					cConta      := mv_par07
				Endif

				cHist070    := "Valor Pago s/ Titulo" 	//				cHist070    := STR0008  //"Valor Pago s/ Titulo"
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se a despesa est     ³
				//³ descontada do valor principal ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SEE->EE_DESPCRD == "S"
					nValPgto+=nDespes
				EndIF
				nTotAger += nValPgto
				cLanca := Iif(mv_par09==1,"S","N")
				cBenef := SE2->E2_NOMFOR
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada para Tratamento baixa           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("FA430LRM")
					ExecBlock("FA430LRM",.F.,.F.,{xBuffer})
				Endif
					If SE2->E2_TIPO $ MVPAGANT+"/"+MVTXA
						RecLock("SE5",.T.)
						SE5->E5_FILIAL	:= xFilial()
						SE5->E5_BANCO	:= cBanco
						SE5->E5_AGENCIA := cAgencia
						SE5->E5_CONTA	:= cConta
						SE5->E5_DATA	:= dBaixa
						SE5->E5_VALOR	:= SE2->E2_VLCRUZ
						SE5->E5_NATUREZ := SE2->E2_NATUREZ
						SE5->E5_RECPAG  := "P"
						SE5->E5_TIPO	:= IIF(SE2->E2_TIPO $ MVPAGANT,MVPAGANT,MVTXA)
						SE5->E5_TIPODOC := IIF(SE2->E2_TIPO $ MVPAGANT,"PA","TXA")
						SE5->E5_HISTOR  := SE2->E2_HIST
						SE5->E5_BENEF   := SA2->A2_NOME
						SE5->E5_PREFIXO := SE2->E2_PREFIXO
						SE5->E5_NUMERO  := SE2->E2_NUM
						SE5->E5_PARCELA := SE2->E2_PARCELA
						SE5->E5_CLIFOR  := SE2->E2_FORNECE
						SE5->E5_LOJA	:= SE2->E2_LOJA
						SE5->E5_DTDIGIT := dDataBase
						SE5->E5_MOTBX	:= "NOR"
						SE5->E5_DTDISPO := SE5->E5_DATA
						SE5->E5_VLMOED2 := SE2->E2_VALOR

						If SPBInUse()
							SE5->E5_MODSPB		:= SE2->E2_MODSPB
						Endif

						If lUsaFlag // Armazena em aFlagCTB para atualizar no modulo Contabil
							aAdd( aFlagCTB, { "E5_LA", "S", "SE5", SE5->( RecNo() ), 0, 0, 0} )
						EndIf

						AtuSalBco( cBanco,cAgencia,cConta,SE5->E5_DTDISPO,SE5->E5_VALOR,"-" )
						lBaixou := .T.
						lMovAdto := .T.
			      ELSE
						// Serao usadas na Fa080Grv para gravar a baixa do titulo, considerando os acrescimos e decrescimos
						nAcresc     := Round(NoRound(xMoeda(SE2->E2_SDACRES,SE2->E2_MOEDA,1,dBaixa,3),3),2)
						nDecresc    := Round(NoRound(xMoeda(SE2->E2_SDDECRE,SE2->E2_MOEDA,1,dBaixa,3),3),2)

						nDescont := nDescont - nDecresc
						nJuros	:= nJuros - nAcresc

			        	lBaixou:=fA080Grv(lPadrao,.F.,.T.,cLanca,cArqEnt)
			        	lMovAdto := .F.
					ENDIF
				
				If lBaixou .and. !lMovAdto		// somente gera pro lote quando nao for PA para nao duplicar no Extrato 
					dbSelectArea("TRB")
					If !(dbSeek(xFilial("SE5")+cBanco+cAgencia+cConta+Dtos(dDebito)))
						Reclock("TRB",.T.)
						Replace FILMOV		With xFilial("SE5")
						Replace BANCO		With cBanco
						Replace AGENCIA	With cAgencia					
						Replace CONTA		With cConta						
						Replace DATAD		With dDebito
					Else
						Reclock("TRB",.F.)
					Endif
					Replace TOTAL WITH TOTAL + nValPgto
					MsUnlock()
		    	Endif
				
				If lF430Baixa
					Execblock("F430BXA",.F.,.F.)
				Endif 
				
				//Contabiliza Rateio Multinatureza
				If lMultNat .and. (SE2->E2_MULTNAT == "1")
					MultNatB("SE2", .F., "1", @lOk, @aColsSEV, @lMultNat, .T.)
					If lOk
						MultNatC("SE2", @nHdlPrv, @nTotal,;
						@cArquivo, (mv_par09 == 1), .T., "1",;
						@nTotLtEZ, lOk, aColsSEV, .T.)
					Endif
				Else
				  	//Contabiliza o que nao possuir rateio multinatureza					
					If lCabec .and. lPadrao .and. lContabiliza .and. lBaixou
						nTotal += DetProva( nHdlPrv,;
						                    cPadrao,;
						                    "FINA430" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
					EndIf
				Endif
			EndIf
			
			If ( SEB->EB_OCORR $ "03" )      //Titulo Rejeitado
				dbSelectArea("SE2")
				dbSetOrder(11)  // Filial+IdCnab
				If !DbSeek(xFilial("SE2")+	Substr(cNumTit,1,nTamTit))
					dbSetOrder(1)
					dbSeek(xFilial()+Pad(cNumTit,nTamTit)+cEspecie) // Filial+Prefixo+Numero+Parcela+Tipo
				Endif
				dbSelectArea("SEA")
				dbSetOrder(1)
				dbSeek(xFilial()+SE2->E2_NUMBOR+SE2->E2_PREFIXO+;
				SE2->E2_NUM+SE2->E2_PARCELA+;
				SE2->E2_TIPO+SE2->E2_FORNECE+SE2->E2_LOJA)
				If ( Found() .And. SE2->E2_SALDO != 0 )
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ PONTO DE ENTRADA F430REJ                                     ³
					//³ Tratamento de dados de titulo rejeitado antes de "zerar" os 	³
					//³ dados do mesmo.                                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lF430Rej 
						Execblock("F430REJ",.F.,.F.)
					Endif	
					RecLock( "SE2" )
					SE2->E2_NUMBOR := Space(6)
					SE2->E2_PORTADO := Space(Len(SE2->E2_PORTADO))
					MsUnlock( )
					dbSelectArea("SEA")
					RecLock("SEA",.F.,.T.)
					dbDelete()
					MsUnlock( )
				EndIf
			EndIf

			//DDA - Debito Direto Autorizado
			If lUsaDDA .and. lProcDDA .and. SEB->EB_OCORR $ "02"      //Entrada de titulo via DDA

				//Posiciona cadastro de fornecedores para obter
				//- Codigo do Fornecedor
				//- Loja do Fornecedor
				//Caso nao encontre os dados do Fornecedor, os dados ficarao em branco
				//Para que o usuario possa visualizar esta falha de cadastro.
				dbSelectArea("SA2")
				dbSetOrder(3)
				MsSeek(xFilial()+cCGC)

				//Grava arquivo de conciliação DDA
				RecLock("FIG",.T.)
				FIG_FILIAL	:= xFilial("FIG") 
				FIG_DATA		:= dDataBase
				FIG_FORNEC	:= SA2->A2_COD
				FIG_LOJA		:= SA2->A2_LOJA
				FIG_NOMFOR	:= SA2->A2_NREDUZ
				FIG_TITULO	:= cNumTit
				FIG_TIPO		:= cEspecie
				FIG_VENCTO	:= dBaixa
				FIG_VALOR	:= nValPgto
				FIG_CONCIL	:= "2"
				FIG_CNPJ		:= cCGC
				FIG_CODBAR	:= cCodBar
				MsUnlock()
			Endif


		EndIf
		// A funcao ReadCnab2 se encarrega de incrementar a leitura, portanto
		// a incrementacao so devera ser feita no caso do CNAB "1"
		If mv_par10 == 1
			nLidos+=nBloco
		EndIf
	EndDo
	
	cFilAnt := cFilOrig					// sempre restaura a filial original 
	
	If lCabec .and. lPadrao .and. lContabiliza 
		dbSelectArea("SE2")
		dbGoBottom()
		dbSkip()
		VALOR := nTotAger
		ABATIMENTO := 0
		nTotal += DetProva( nHdlPrv,;
		                    cPadrao,;
		                    "FINA430" /*cPrograma*/,;
		                    cLote,;
		                    /*nLinha*/,;
		                    /*lExecuta*/,;
		                    /*cCriterio*/,;
		                    /*lRateio*/,;
		                    /*cChaveBusca*/,;
		                    /*aCT5*/,;
		                    /*lPosiciona*/,;
		                    @aFlagCTB,;
		                    /*aTabRecOri*/,;
		                    /*aDadosProva*/ )
	Endif
	
	IF lPadrao .and. lContabiliza .and. lCabec
		RodaProva(  nHdlPrv,;
					nTotal )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Envia para Lancamento Contabil                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lDigita:=IIF(mv_par01==1,.T.,.F.)
		lAglut :=IIF(mv_par02==1,.T.,.F.)
		cA100Incl( cArquivo,;
		           nHdlPrv,;
		           3 /*nOpcx*/,;
		           cLote,;
		           lDigita,;
		           lAglut,;
		           /*cOnLine*/,;
		           /*dData*/,;
		           /*dReproc*/,;
		           @aFlagCTB,;
		           /*aDadosProva*/,;
		           /*aDiario*/ )
	
		aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
	End
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para renomear arquivo de retorno   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (ExistBlock("FA430REN"))
		FCLOSE(nHdlBco)
		ExecBlock("FA430REN",.f.,.f.)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava no SEE o n£mero do £ltimo lote recebido e gera ³
	//³ movimentacao bancaria											³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cLoteFin) .and. GetMv("MV_BXCNAB") == "S"
		If TRB->(Reccount()) > 0
			RecLock("SEE",.F.)
			SEE->EE_LOTECP := cLoteFin
			MsUnLock()
			dbSelectArea("TRB")
			dbGotop()
			While !Eof()
				cFilAnt := TRB->FILMOV
				Reclock( "SE5" , .T. )
				SE5->E5_FILIAL := xFilial()
				SE5->E5_DATA   := TRB->DATAD
				SE5->E5_VALOR  := TRB->TOTAL
				SE5->E5_RECPAG := "P"
				SE5->E5_DTDIGIT:= TRB->DATAD
				SE5->E5_BANCO  := TRB->BANCO
				SE5->E5_AGENCIA:= TRB->AGENCIA
				SE5->E5_CONTA  := TRB->CONTA
				SE5->E5_DTDISPO:= TRB->DATAD
				SE5->E5_LOTE   := cLoteFin
				SE5->E5_HISTOR := "Baixa por Retorno CNAB / Lote :" + " " + cLoteFin // 
				If SpbInUse()
					SE5->E5_MODSPB := "1"
				Endif
				MsUnlock()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza saldo bancario.      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				AtuSalBco(TRB->BANCO,TRB->AGENCIA,TRB->CONTA,SE5->E5_DATA,SE5->E5_VALOR,"-")
				dbSelectArea("TRB")
				dbSkip()
			Enddo
		Endif	
	EndIf
	
	End Transaction

	
	dbSelectArea("TRB")
	dbCloseArea()
	Ferase(cNomeArq+GetDBExtension())         // Elimina arquivos de Trabalho
	Ferase(cNomeArq+OrdBagExt())	 			   // Elimina arquivos de Trabalho
	
	VALOR := 0
	dbSelectArea( cAlias )
	dbGoTo( nSavRecno )

EndIf
	
Return .F.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fA430Par  ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Aciona parametros do Programa                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fA430Par()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//Static Function fA430Par()

//Pergunte( "AFI430" )

//MV_PAR03 := UPPER(MV_PAR03)

//Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ChangDate ³ Autor ³ Wagner Xavier         ³ Data ³ 23/06/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Converte um string data para o formato ddmmaa de acordo com ³±±
±±³          ³um determionado tipo passado para a fun‡„o.                 ³±±
±±³          ³Tipo 1 - ddmmaa                                             ³±±
±±³          ³Tipo 2 - mmddaa                                             ³±±
±±³          ³Tipo 3 . aammdd                                             ³±±
±±³          ³Tipo 4 - ddmmaaaa                                           ³±±
±±³          ³Tipo 5 - aaaammdd                                           ³±±
±±³          ³Tipo 6 - mmddaaaa                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ChangDate(__cData,nPosicao)
LOCAL nPosDia:=0,nPosMes:=0,nPosAno:=0
LOCAL aSubs  := {}

// posicao do dia,mes,ano,tamanho do ano;
AADD( aSubs,{ 01,03,05,2 } )
AADD( aSubs,{ 03,01,05,2 } )
AADD( aSubs,{ 05,03,01,2 } )
AADD( aSubs,{ 01,03,05,4 } )
AADD( aSubs,{ 07,05,01,4 } )
AADD( aSubs,{ 03,01,05,4 } )

If nPosicao == 0;nPosicao++;Endif

nPosDia := aSubs[nPosicao][1]
nPosMes := aSubs[nPosicao][2]
nPosAno := aSubs[nPosicao][3]

__cData := Substr(__cData,nPosDia,2)+Substr(__cData,nPosMes,2)+Substr(__cData,nPosAno,aSubs[nPosicao][4])

If Len(__cData) == 8
	__cData := Substr(__cData,1,4)+Substr(__cData,7,2)
Endif

Return(__cData)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Chk430File³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 24/11/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Checa se arquivo de TB j  foi processado anteriormente		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Chk430File()  															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Fina430																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Chk430File()

LOCAL cFile := "TB"+cNumEmp+".VRF"
LOCAL lRet	:= .F.
LOCAL aFiles:= {}
LOCAL cString
LOCAL nTam
LOCAL nHdlFile
LOCAL l430Chkfile := ExistBlock("F430CHK")

If l430ChkFile		// garantir que o arquivo nao seja reenviado
	Return Execblock("F430CHK",.F.,.F.)
Endif

If !FILE(cFile)
	nHdlFile := fCreate(cFile)
ELSE
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tenta abrir o arquivo em modo exclusivo e Leitura/Gravacao ³	
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While (nHdlFile := fOpen(cFile,FO_READWRITE+FO_EXCLUSIVE))==-1 .AND. ;
			MsgYesNo( ""+cNumEmp+STR0012,"" )//			MsgYesNo( STR0011+cNumEmp+STR0012, STR0010 )
	End
Endif

If nHdlFile > 0

	nTam := TamSx1("AFI430","03")[1] // Tamanho do parametro
	xBuffer := SPACE(nTam)
	// Le o arquivo e adiciona na matriz
	While fReadLn(nHdlFile,@xBuffer,nTam) 
		Aadd(aFiles, Trim(xBuffer))
	Enddo	

	If ASCAN(aFiles,Trim(MV_PAR03)) > 0
		Help(" ",1,"CHK200FILE")       // Arquivo de Trans.Banc. j  processado
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento com o erro  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","CHK200FILE",Ap5GetHelp("CHK200FILE"))

		// Por Josinei De Lima Sobreira
		   lExecuta := MsgYesNo("Deseja reprocessar o arquivo " + AllTrim(Mv_Par03) + " ?", "Atenção")
		   If lExecuta
				lRet := .T.
		   Else
				lRet := .F.
		   EndIf
		// Eof

	Else
		fSeek(nHdlFile,0,2) // Posiciona no final do arquivo
		cString := Alltrim(mv_par03)+Chr(13)+Chr(10)
		fWrite(nHdlFile,cString)	// Grava nome do arquivo a ser processado
		lRet := .T.
	Endif	
	fClose (nHdlFile)
Else
   Help(" ", 1, "CHK200ERRO") // Erro na leitura do arquivo de entrada
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o log de processamento com o erro  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcLogAtu("ERRO","CHK200ERRO",Ap5GetHelp("CHK200ERRO"))

EndIf	

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSX1    ³Autor ³  Marcos Berto        ³Data³ 04/09/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta helps de campo                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function AjustaSX1(cPerg)

Local aHelpPor:={}
Local aHelpSpa:={}
Local aHelpEng:={} 
                               
//Inclusão de pergunta "Processa Filial?"
SX1->( dbSetOrder( 1 ) )

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "11" ) )

	PutSx1( cPerg, "11","Processa Filial?","¿Processa Sucursal?","Processa Branch?","mv_chB","N",1,0,1,"C","","","","",;
		"mv_par11","Filial Atual","Sucursal Atual","Actual Branch","","Todas Filiais","Todas Sucursais","All Branchs","","","","","","","","","",,,,".AFI43011.")
	
	aHelpPor := {}
	aHelpSpa := {}
	aHelpEng := {}
	
	Aadd(aHelpPor,{	"Indicar se o processamento de retorno",;
					"deve considerar somente os títulos da",;
					"Filial Atual ou os títulos de Todas as",;
					"Filiais, se utilizado o recurso IDCNAB.",;
					"Na opção Todas as Filiais, se a",;
					"contabilidade estiver em modo exclusivo, ",;
					"a contabilização deve ser realizada em",;
					"modo off-line." })
                   
	Aadd(aHelpSpa,{	"Indicar si el proceso de retorno",;
					"considerará únicamente los títulos",;
					"de la Sucursal actual o los títulos de",;
					"Todas las sucursales, si utilizar lo",;
					"recurso IDCNAB. En la opción Todas",;
					"las Sucursales, si la contabilidad ",;
					"estuviera en modo exclusivo, la ",;
					"contabilizacion debe hacerse en modo ",;
					"off-line." })
                  	
	Aadd(aHelpEng,{	"Indicates if the receipt transaction",;
					"have to consider only the bills of ",;
					"current branch or all branchs, if used",;
					"resource IDCNAB. If you select all",;
					"branchs and the accounting is in ",;
					"exclusive mode, you have to use the",;
					"off-line accounting routine." })
	
	PutHelp("P.AFI43011.",aHelpPor[1],aHelpEng[1],aHelpSpa[1])

EndIf

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "12" ) )

	PutSx1( cPerg, "12","Considera Multiplas Nat. ?","Proration of Bill´s class ?", "Prorrateo del titulo ?","mv_chC","N",1,0,2,"C","","","","",;
		"mv_par12","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",,,,".AFI43012.")

	aHelpPor := {}
	aHelpSpa := {}
	aHelpEng := {}
	
	//Help - campo .AFI43012.
	Aadd( aHelpPor,{"Informe SIM caso queira considerar", "as Multiplas Naturezas da Inclusão", " do Titulo."   })
	Aadd( aHelpSpa,{"Seleccione SIM Prorrateo de las", "modalidades del titulo" })
	Aadd( aHelpEng,{"Select Proration of Bill´s class"  })
	
	PutHelp("P.AFI43012.",aHelpPor[1],aHelpEng[1],aHelpSpa[1])

EndIf


//-------- Ajustes de Help -----------


//Help - campo .AFI43002.
Aadd( aHelpPor, {'Informe a opção "Sim" para',;
				'que os lançamentos contábeis',;
				'originados na movimentação de',;
				'recebimento do arquivo sejam',;
				'exibidos na tela, ou "Não",',;
				'caso contrário.'})
				
Aadd( aHelpSpa, {'Elija la opcion "Si" para',;
				 'que los asientos contables',;
				 'originados en el movimiento',;
				 'de recepcion del archivo sean',;
				 'exhibidos en la ventana, o en',; 
				 'caso contrario, elija "No".'})

Aadd( aHelpEng, {'Inform the option "Yes"',;
                 'in order to the accounting',;
                 'entries originated in the file',;
	             'receipt transaction to be',; 
                 'displayed on the screen.',; 
                 'Otherwise, select "No".'}) 

PutHelp("P.AFI43002.",aHelpPor[1],aHelpEng[1],aHelpSpa[1],.T.)

aHelpPor:={}
aHelpSpa:={}
aHelpEng:={}

//Help - campo .AFI43003.
Aadd( aHelpPor, {"Informe o nome do arquivo de entrada.",; 
				 "Geralmente os bancos tem uma forma",;
				 "padrão de nomeação dos arquivos."})

Aadd( aHelpSpa, {"Digite el nombre del archivo de",; 
				 "entrada. Generalmente los bancos",;
				 "tienen una forma estandar de",; 
				 "nombramiento de los archivos."})

Aadd( aHelpEng, {"Inform the inflow file name. Usually,",;
				 "the banks have a standard way to",; 
				 "name the files."})

PutHelp("P.AFI43003.",aHelpPor[1],aHelpEng[1],aHelpSpa[1],.T.)

aHelpPor:={}
aHelpSpa:={}
aHelpEng:={}

//Help - campo .AFI43004.
Aadd( aHelpPor, {"Informe o nome do arquivo",; 
	             "de configuração de retorno.",;
                 "Este arquivo conterá a",; 
                 "configuração para o retorno",;
                 "bancário definida no Módulo",;
                 "Configurador."})

Aadd( aHelpSpa, {"Informe el nombre del archivo",; 
                 "de configuracion de retorno.",; 
                 "Este archivo contendra la",; 
                 "configuracion para el retorno",; 
                 "bancario definido en el Modulo",;
                 "Configurador."})

Aadd( aHelpEng, {"Inform the return setup file.",; 
                 "name. This file will contain the",; 
                 "setup for the bank return defined",; 
                 "in the Configurator Module."})

PutHelp("P.AFI43004.",aHelpPor[1],aHelpEng[1],aHelpSpa[1],.T.)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FAVerInd ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 02/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica existencia dos indices 19(SE1) e 13(SE2)          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FAVerInd()

Local lIndSE1 := .F.
Local lIndSE2 := .F.
Local aAreaAtu := GetArea()

//Verifica existencia do indice 12 do SE5 - E5_FILIAL+DTOS(E5_DTDISPO)+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ
dbSelectArea("SIX")
If MSSeek("SE1"+"J") 
	If "E1_IDCNAB" $ CHAVE .AND. !("E1_FILIAL" $ CHAVE)
		lIndSE1 :=	.T.
	EndIf
Endif
If MSSeek("SE2"+"D") 
	If "E2_IDCNAB" $ CHAVE .AND. !("E2_FILIAL" $ CHAVE)
		lIndSE2 :=	.T.
	EndIf
Endif
	
RestArea(aAreaAtu)

Return (lIndSe1 .and. lIndSe2)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºRotina    ³Dv_BarCodeºAutor  ³Claudio D. de Souza º Data ³  14/12/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calcula o digito verificador de um codigo de barras padrao  º±±
±±º          ³Febraban.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CodBarVl2                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function DV_BarCode( cBarCode )
Local cDig
Local nPos
Local nAux := 0

For nPos := 1 To 43
	nAux += Val(SubStr(cBarCode,nPos,1)) * If( nPos<= 3, ( 5-nPos),     ;
		If( nPos<=11, (13-nPos),     ;
		If( nPos<=19, (21-nPos),     ;
		If( nPos<=27, (29-nPos),     ;
		If( nPos<=35, (37-nPos),     ;
		(45-nPos) )))))
Next
nAux := nAux % 11
cDig := If( (11-nAux)>9, 1, (11-nAux) )

Return Str(cDig,1)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA430T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 15.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA430                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//Function FinA430T(aParam)
//	cRotinaExec := "FINA380"
//	ReCreateBrow("SE2",FinWindow)      		
//	FinA430()
//	ReCreateBrow("SE2",FinWindow)      	
//	dbSelectArea("SE2")
	
//	INCLUI := .F.
//	ALTERA := .F.

//Return .T.	


